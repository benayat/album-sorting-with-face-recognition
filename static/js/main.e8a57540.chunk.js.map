{"version":3,"sources":["context/images/ImagesContext.js","context/images/imagesReducer.js","utils/idbStores/images.js","context/images/ImagesProvider.js","context/family/FamilyContext.js","context/family/familyReducer.js","utils/idbStores/familyMembers.js","context/family/FamilyProvider.js","context/faceapi/FaceapiContext.js","context/faceapi/FaceapiReducer.js","context/faceapi/FaceapiProvider.js","pages/AlbumCrud.js","components/VideoLoader.js","pages/Loader.js","components/UploaderForm.js","components/familyMemberCard.js","components/DropZone.js","pages/ManageFamily.js","pages/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ImagesContext","createContext","imagesReducer","state","action","type","images","payload","currentImageSrc","imagesByLabel","loading","dbPromise","openDB","upgrade","db","createObjectStore","keyPath","get","title","a","set","imageObject","put","imagesInterface","getAll","getAllImagesByLabelText","label","store","transaction","openCursor","cursor","imagesOutput","value","labels","includes","push","continue","deleteByLabel","filter","currentLabel","deleteImageFromCurrentFamilyMember","image","clear","deleteAllDatabase","deleteDB","ImageProvider","props","useReducer","dispatch","getImageByTitle","imageSrc","console","log","getAllImages","error","addNewImage","getAllImagesByLabel","useCallback","deleteImageFromCurrentAlbum","allImages","clearImagesByLabel","Provider","children","FamilyContext","familyReducer","familyMembers","familyNames","currentFamilyMember","familyMembersInterface","key","getAllNames","namesOutput","object","labelKey","delete","FamilyProvider","getFamilyMemberByLabel","familyMember","getAllFamilyMembers","deleteFamilyMember","newFamilyMembers","addFamilyMember","FaceapiContext","FaceapiReducer","faceapi","currentDescriptor","labeledDescriptors","modulesLoaded","FaceapiProvider","useContext","minMatchRate","currentMatch","loadModules","MODEL_URL","makeImage","alt","src","document","createElement","getSingleDescriptor","withFaceLandmarks","withFaceDescriptor","addFamilyMemberFaceapi","descriptor","addNewImageFaceapi","matchedLabels","map","member","faceMatcher","withFaceDescriptors","forEach","fd","bestMatch","findBestMatch","match","toString","split","AlbumCrud","useParams","getAllImagesByLabelCallback","useEffect","loadAlbum","contextMenuDelete","event","preventDefault","target","className","classlabel","length","onContextMenu","VideoLoader","videoRef","useRef","undefined","muted","autoPlay","loop","ref","onClick","current","Loader","history","useHistory","load","UploaderForm","useState","setLabel","currentTitle","setTitle","file","setFile","restoreInitialState","getImageInfo","e","addNewFamilyMember","addNewImageToAlbums","onSubmit","disabled","onChange","files","size","reader","FileReader","name","readAsDataURL","onload","result","FamilyMemberCard","to","style","textDecoration","DropZone","onDrop","acceptedFiles","useDropzone","accept","getRootProps","getInputProps","ManageFamily","getAllFamilyMembersCallback","button","Header","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8a57540.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport const ImagesContext = createContext();\r\n","const imagesReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_IMAGES':\r\n      return { ...state, images: action.payload };\r\n    case 'ADD_IMAGE':\r\n      return { ...state, currentImageSrc: action.payload };\r\n    // case 'ADD_NEW_IMAGE':\r\n    //   const images = [...state.images, action.payload];\r\n    //   return { ...state, images: images };\r\n    case 'SET_IMAGES_BY_LABEL':\r\n      return { ...state, imagesByLabel: action.payload.imagesByLabel };\r\n    case 'CLEAR_ALL_IMAGES_BY_LABEL':\r\n      return { ...state, imagesByLabel: [] };\r\n    case 'SENDING_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'REQUEST_FINISHED':\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default imagesReducer;\r\n","import { openDB, deleteDB } from \"idb\";\r\n\r\nconst dbPromise = openDB(\"imagesDB\", 1, {\r\n  upgrade(db) {\r\n    db.createObjectStore(\"images\", {\r\n      keyPath: \"title\",\r\n    });\r\n  },\r\n});\r\n\r\nconst get = async (title) => {\r\n  return (await dbPromise).get(\"images\", title);\r\n};\r\nconst set = async (imageObject) => {\r\n  return (await dbPromise).put(\"images\", imageObject);\r\n};\r\nconst imagesInterface = {\r\n  async get(title) {\r\n    return (await dbPromise).get(\"images\", title);\r\n  },\r\n  async getAll() {\r\n    return (await dbPromise).getAll(\"images\");\r\n  },\r\n  //searching is expensive because of the huge descriptors, so here I'll use a cursor(iterator) to\r\n  //iterate over the store to find what I\"m looking for.\r\n  async getAllImagesByLabelText(label) {\r\n    let store = (await dbPromise).transaction(\"images\").store;\r\n    let cursor = await store.openCursor();\r\n    let imagesOutput = [];\r\n    while (cursor) {\r\n      const { labels } = cursor.value;\r\n      if (labels.includes(label)) {\r\n        imagesOutput.push(cursor.value);\r\n      }\r\n      cursor = await cursor.continue();\r\n    }\r\n    return imagesOutput;\r\n  },\r\n  async set(imageObject) {\r\n    return (await dbPromise).put(\"images\", imageObject);\r\n  },\r\n  async deleteByLabel(label) {\r\n    let store = (await dbPromise).transaction(\"images\").store;\r\n    let cursor = await store.openCursor();\r\n    while (cursor) {\r\n      const { labels } = cursor.value;\r\n      labels.filter((currentLabel) => currentLabel !== label);\r\n      cursor = await cursor.continue();\r\n    }\r\n  },\r\n  async deleteImageFromCurrentFamilyMember(title, label) {\r\n    const image = await get(title);\r\n    image.labels = image.labels.filter(\r\n      (currentLabel) => currentLabel !== label\r\n    );\r\n    return await set(image);\r\n  },\r\n  async clear() {\r\n    return (await dbPromise).clear(\"images\");\r\n  },\r\n  async deleteAllDatabase() {\r\n    return await deleteDB(\"imagesDB\");\r\n  },\r\n};\r\n\r\nexport default imagesInterface;\r\n\r\n/* \r\nimage looks like:\r\nobject {\r\n  title:___\r\n  src:___\r\n  labels:[]\r\n  descriptor:___\r\n}\r\n*/\r\n","import React, { useCallback, useReducer } from \"react\";\r\nimport { ImagesContext } from \"./ImagesContext\";\r\nimport imagesReducer from \"./imagesReducer\";\r\nimport imagesInterface from \"../../utils/idbStores/images\";\r\n\r\nconst ImageProvider = (props) => {\r\n  const {\r\n    getAllImagesByLabelText,\r\n    get,\r\n    getAll,\r\n    deleteImageFromCurrentFamilyMember,\r\n    set,\r\n  } = imagesInterface;\r\n  const initialState = {\r\n    images: [],\r\n    imagesByLabel: [],\r\n    currentImageSrc: null,\r\n    loading: true,\r\n  };\r\n  const [state, dispatch] = useReducer(imagesReducer, initialState);\r\n\r\n  const getImageByTitle = async (title) => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      const imageSrc = await get(title);\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      dispatch({ type: \"ADD_IMAGE\", payload: imageSrc });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getAllImages = async () => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      const images = await getAll();\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      dispatch({ type: \"SET_IMAGES\", payload: images });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  //imageObject: src, labels[],descriptor,title.\r\n  const addNewImage = async (imageObject) => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      await set(imageObject);\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      await getAllImages();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  //get all images that belong to a specified label\r\n  const getAllImagesByLabel = useCallback(\r\n    async (label) => {\r\n      try {\r\n        dispatch({ type: \"SENDING_REQUEST\" });\r\n        const imagesByLabel = await getAllImagesByLabelText(label);\r\n        dispatch({ type: \"REQUEST_FINISHED\" });\r\n        dispatch({\r\n          type: \"SET_IMAGES_BY_LABEL\",\r\n          payload: { imagesByLabel },\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    [getAllImagesByLabelText]\r\n  );\r\n\r\n  const deleteImageFromCurrentAlbum = async (title, label) => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      await deleteImageFromCurrentFamilyMember(title, label);\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      const allImages = await getAll();\r\n      dispatch({ type: \"SET_IMAGES\", payload: allImages });\r\n      await getAllImagesByLabel(label);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const clearImagesByLabel = async () => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      dispatch({ type: \"CLEAR_IMAGES_BY_LABEL\" });\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImagesContext.Provider\r\n      value={{\r\n        images: state.images,\r\n        imagesByLabel: state.imagesByLabel,\r\n        currentImageSrc: state.currentImageSrc,\r\n        loading: state.loading,\r\n        getImageByTitle: getImageByTitle,\r\n        getAllImages: getAllImages,\r\n        getAllImagesByLabel: getAllImagesByLabel,\r\n        deleteImageFromCurrentAlbum: deleteImageFromCurrentAlbum,\r\n        clearImagesByLabel: clearImagesByLabel,\r\n        addNewImage: addNewImage,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ImagesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ImageProvider;\r\n\r\n/* \r\nimage looks like:\r\nobject {\r\n  title:___\r\n  src:___\r\n  labels:[]\r\n  descriptor:___\r\n}\r\n*/\r\n","import { createContext } from 'react';\r\nexport const FamilyContext = createContext();\r\n","const familyReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_FAMILY_MEMBERS':\r\n      return { ...state, familyMembers: action.payload };\r\n    case 'SET_FAMILY_NAMES':\r\n      return { ...state, familyNames: action.payload };\r\n    case 'SET_CURRENT_FAMILY_MEMBER':\r\n      return { ...state, currentFamilyMember: action.payload };\r\n    case 'SENDING_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'REQUEST_FINISHED':\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default familyReducer;\r\n","import { openDB, deleteDB } from 'idb';\r\n\r\nconst dbPromise = openDB('familyMembersDB', 1, {\r\n  upgrade(db) {\r\n    db.createObjectStore('familyMembers', {\r\n      keyPath: 'label',\r\n    });\r\n  },\r\n});\r\nconst familyMembersInterface = {\r\n  async get(key) {\r\n    return (await dbPromise).get('familyMembers', key);\r\n  },\r\n  async getAll() {\r\n    return (await dbPromise).getAll('familyMembers');\r\n  },\r\n  //here too, because I iterate over an array with descriptors, I must be more performant and not use index,\r\n  //since its just creating a new 'silent' store and wasting alot of space and time - so I'm using opencursor\r\n  //as iterator.\r\n  //after this change, we don't need anymore the third database of familyNames!! hooray :)\r\n  async getAllNames() {\r\n    let store = (await dbPromise).transaction('familyMembers').store;\r\n    let cursor = await store.openCursor();\r\n    let namesOutput = [];\r\n    while (cursor) {\r\n      const { label } = cursor.value;\r\n      namesOutput.push(label);\r\n      cursor = await cursor.continue();\r\n    }\r\n    return namesOutput;\r\n  },\r\n  //object: {label, src,}\r\n  async set(object) {\r\n    return (await dbPromise).put('familyMembers', object);\r\n  },\r\n  async deleteByLabel(labelKey) {\r\n    return (await dbPromise).delete('familyMembers', labelKey);\r\n  },\r\n  async clear() {\r\n    return (await dbPromise).clear('familyMembers');\r\n  },\r\n  async deleteAllDatabase() {\r\n    return await deleteDB('familyMembersDB');\r\n  },\r\n};\r\n\r\nexport default familyMembersInterface;\r\n","import React, { useCallback, useReducer } from \"react\";\r\nimport { FamilyContext } from \"./FamilyContext\";\r\nimport familyReducer from \"./familyReducer\";\r\nimport familyMembersInterface from \"../../utils/idbStores/familyMembers\";\r\n\r\nconst FamilyProvider = (props) => {\r\n  const { get, set, getAll, deleteByLabel } = familyMembersInterface;\r\n  const initialState = {\r\n    familyMembers: [],\r\n    familyNames: [],\r\n    currentFamilyMember: null,\r\n    loading: true,\r\n  };\r\n  const [state, dispatch] = useReducer(familyReducer, initialState);\r\n\r\n  //setting the current family member in state, so I can take it from the current field later\r\n  const getFamilyMemberByLabel = async (label) => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      const familyMember = await get(label);\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      dispatch({ type: \"SET_CURRENT_FAMILY_MEMBER\", payload: familyMember });\r\n      return familyMember;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  const getAllFamilyMembers = useCallback(async () => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      const familyMembers = await getAll();\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      dispatch({ type: \"SET_FAMILY_MEMBERS\", payload: familyMembers });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [getAll]);\r\n  const deleteFamilyMember = async (label) => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      await deleteByLabel(label);\r\n      const newFamilyMembers = await getAll();\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      dispatch({ type: \"SET_FAMILY_MEMBERS\", payload: newFamilyMembers });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  //moves:\r\n  /* \r\n    - adding family member object to the store.\r\n    - updating members and names databases.\r\n\r\n  */\r\n  const addFamilyMember = async (familyMember) => {\r\n    try {\r\n      dispatch({ type: \"SENDING_REQUEST\" });\r\n      await set(familyMember);\r\n      dispatch({ type: \"REQUEST_FINISHED\" });\r\n      await getAllFamilyMembers();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <FamilyContext.Provider\r\n      value={{\r\n        familyMembers: state.familyMembers,\r\n        familyNames: state.familyNames,\r\n        currentFamilyMember: state.currentFamilyMember,\r\n        loading: state.loading,\r\n        getFamilyMemberByLabel: getFamilyMemberByLabel,\r\n        getAllFamilyMembers: getAllFamilyMembers,\r\n        deleteFamilyMember: deleteFamilyMember,\r\n        addFamilyMember: addFamilyMember,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FamilyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FamilyProvider;\r\n\r\n/* \r\nfamilyMember = {\r\n  label:__\r\n  src:___\r\n  descriptor:___\r\n}\r\n*/\r\n","import { createContext } from 'react';\r\n\r\nexport const FaceapiContext = createContext();\r\n","const FaceapiReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_MODULES':\r\n      return { ...state, faceapi: action.payload };\r\n    case 'GET_SINGLE_DESCRIPTOR':\r\n      return { ...state, currentDescriptor: action.payload };\r\n    case 'GET_MULTIPLE_DESCRIPTORS':\r\n      return { ...state, familyNames: action.payload };\r\n    case 'ADD_FAMILY_MEMBER':\r\n      let labeledDescriptors = state.labeledDescriptors;\r\n      labeledDescriptors = (labeledDescriptors && [\r\n        ...labeledDescriptors,\r\n        action.payload,\r\n      ]) || [action.payload];\r\n      return { ...state, labeledDescriptors: labeledDescriptors };\r\n    case 'SENDING_LOAD_REQUEST':\r\n      return { ...state, modulesLoaded: false };\r\n    case 'LOAD_REQUEST_FINISHED':\r\n      return { ...state, modulesLoaded: true };\r\n    case 'SENDING_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'REQUEST_FINISHED':\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default FaceapiReducer;\r\n","import * as faceapi from \"face-api.js\";\r\n\r\nimport { FaceapiContext } from \"./FaceapiContext\";\r\nimport FaceapiReducer from \"./FaceapiReducer\";\r\nimport React, { useCallback, useContext, useReducer } from \"react\";\r\n\r\nimport { ImagesContext } from \"../images/ImagesContext\";\r\nimport { FamilyContext } from \"../family/FamilyContext\";\r\n//labeledDescriptors:{label:descriptor}\r\nconst FaceapiProvider = (props) => {\r\n  const { addFamilyMember, getAllFamilyMembers, familyMembers } = useContext(\r\n    FamilyContext\r\n  );\r\n  const { addNewImage } = useContext(ImagesContext);\r\n\r\n  const initialState = {\r\n    modulesLoaded: false,\r\n    labeledDescriptors: [],\r\n    loading: true,\r\n    minMatchRate: 0.8,\r\n    currentMatch: false,\r\n  };\r\n  const [state, dispatch] = useReducer(FaceapiReducer, initialState);\r\n\r\n  const loadModules = useCallback(async () => {\r\n    const MODEL_URL = \"/models\";\r\n    dispatch({ type: \"SENDING_LOAD_REQUEST\" });\r\n    console.log(\"loading modules...\");\r\n    await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n    await faceapi.loadFaceLandmarkModel(MODEL_URL);\r\n    await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n    await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\r\n    console.log(\"finished loading\");\r\n    dispatch({ type: \"LOAD_REQUEST_FINISHED\" });\r\n  }, []);\r\n  // HELPER FUNCTIONS:\r\n  const makeImage = (alt, src) => {\r\n    const image = document.createElement(\"img\");\r\n    image.alt = alt;\r\n    image.src = src;\r\n    return image;\r\n  };\r\n  const getSingleDescriptor = async (alt, src) => {\r\n    if (!state.modulesLoaded) {\r\n      await loadModules();\r\n    }\r\n    return await faceapi\r\n      .detectSingleFace(makeImage(alt, src))\r\n      .withFaceLandmarks()\r\n      .withFaceDescriptor();\r\n  };\r\n  // const getDetectionResult = async (descriptor1, descriptor2) => {\r\n  //   if (!state.modulesLoaded) {\r\n  //     await loadModules();\r\n  //   }\r\n  //   const faceMatcher = new faceapi.FaceMatcher(descriptor1);\r\n  //   const bestMatch = faceMatcher.findBestMatch(descriptor2.descriptor);\r\n  //   console.log(bestMatch.toString());\r\n  //   const matchRate = parseFloat(bestMatch.toString().slice(-5, -1));\r\n  //   if (matchRate > state.minMatchRate) {\r\n  //     console.log('match!');\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // };\r\n  const addFamilyMemberFaceapi = async (label, src) => {\r\n    dispatch({ type: \"SENDING_REQUEST\" });\r\n    const currentDescriptor = await getSingleDescriptor(label, src);\r\n    dispatch({\r\n      type: \"ADD_FAMILY_MEMBER\",\r\n      payload: { [label]: currentDescriptor },\r\n    });\r\n    await addFamilyMember({ label, src, descriptor: currentDescriptor });\r\n    dispatch({ type: \"REQUEST_FINISHED\" });\r\n  };\r\n  const addNewImageFaceapi = async (title, src) => {\r\n    dispatch({ type: \"SENDING_REQUEST\" });\r\n    const matchedLabels = [];\r\n    await getAllFamilyMembers();\r\n    const labeledDescriptors = familyMembers.map((member) => {\r\n      return new faceapi.LabeledFaceDescriptors(member.label, [\r\n        member.descriptor.descriptor,\r\n      ]);\r\n    });\r\n    const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors);\r\n    const results = await faceapi\r\n      .detectAllFaces(makeImage(title, src))\r\n      .withFaceLandmarks()\r\n      .withFaceDescriptors();\r\n\r\n    results.forEach((fd) => {\r\n      const bestMatch = faceMatcher.findBestMatch(fd.descriptor);\r\n      const match = bestMatch.toString().split(\" \")[0];\r\n      if (!matchedLabels.includes(match))\r\n        matchedLabels.push(bestMatch.toString().split(\" \")[0]);\r\n      console.log(bestMatch.toString());\r\n    });\r\n    addNewImage({\r\n      title,\r\n      src,\r\n      labels: matchedLabels,\r\n    });\r\n  };\r\n  return (\r\n    <FaceapiContext.Provider\r\n      value={{\r\n        modulesLoaded: state.modulesLoaded,\r\n        loading: state.loading,\r\n        labeledDescriptors: state.labeledDescriptors,\r\n        loadModules: loadModules,\r\n        addFamilyMemberFaceapi: addFamilyMemberFaceapi,\r\n        addNewImageFaceapi: addNewImageFaceapi,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FaceapiContext.Provider>\r\n  );\r\n};\r\nexport default FaceapiProvider;\r\n//still need to complete addnewimage!!\r\n//by calling the imagesprovider method.\r\n\r\n/* \r\nfamilyMember = {\r\n  label:__\r\n  src:___\r\n  descriptor:___\r\n}\r\n*/\r\n/* \r\nimage looks like:\r\nobject {\r\n  title:___\r\n  src:___\r\n  labels:[]\r\n  descriptor:___\r\n}\r\n*/\r\n","import \"../style/album.css\";\r\nimport { useCallback, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { ImagesContext } from \"../context/images/ImagesContext\";\r\nconst AlbumCrud = () => {\r\n  const { label } = useParams();\r\n  const {\r\n    getAllImagesByLabel,\r\n    deleteImageFromCurrentAlbum,\r\n    imagesByLabel,\r\n    loading,\r\n  } = useContext(ImagesContext);\r\n\r\n  const getAllImagesByLabelCallback = useCallback(async () => {\r\n    await getAllImagesByLabel(label);\r\n  }, [label, getAllImagesByLabel]);\r\n\r\n  //getAllImagesByLabel is a callback function, defined with useCallback!\r\n  useEffect(() => {\r\n    const loadAlbum = async (label) => {\r\n      await getAllImagesByLabelCallback();\r\n    };\r\n    loadAlbum();\r\n  }, [label, getAllImagesByLabelCallback]);\r\n\r\n  const contextMenuDelete = async (event) => {\r\n    event.preventDefault();\r\n    await deleteImageFromCurrentAlbum(event.target.alt, label);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <div classlabel=\"album\">\r\n        <h1>{label} album</h1>\r\n        <div className=\"albumContainer\">\r\n          {!loading &&\r\n            imagesByLabel.length >= 1 &&\r\n            imagesByLabel.map((image) => {\r\n              return (\r\n                <img\r\n                  key={image.title}\r\n                  alt={image.title}\r\n                  src={image.src}\r\n                  onContextMenu={contextMenuDelete}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AlbumCrud;\r\n\r\n//need to get the label from the param variable from the link path!\r\n//using alt as title!\r\n","import { useRef } from 'react';\r\n\r\nconst VideoLoader = ({ src }) => {\r\n  const videoRef = useRef(undefined);\r\n\r\n  return (\r\n    <div>\r\n      <div>calculaing the future, please wait</div>\r\n      <div>\r\n        <video muted autoPlay loop ref={videoRef}>\r\n          <source type='video/mp4' src={src} />\r\n        </video>\r\n      </div>\r\n      <div className='audioButtons'>\r\n        <button onClick={() => (videoRef.current.muted = false)}>unmute</button>\r\n        <button onClick={() => (videoRef.current.muted = true)}>mute</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default VideoLoader;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport VideoLoader from \"../components/VideoLoader\";\r\nimport { FaceapiContext } from \"../context/faceapi/FaceapiContext\";\r\nconst Loader = () => {\r\n  const { modulesLoaded, loadModules } = useContext(FaceapiContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      if (modulesLoaded === false) {\r\n        await loadModules();\r\n      }\r\n    };\r\n    load();\r\n    return () => {\r\n      history.push(\"/manageFamily\");\r\n    };\r\n  }, [history, loadModules, modulesLoaded]);\r\n  return <VideoLoader />;\r\n};\r\nexport default Loader;\r\n","import '../style/uploaderForm.css';\r\nimport React, { useState } from 'react';\r\nconst UploaderForm = (props) => {\r\n  const [currentLabel, setLabel] = useState('');\r\n  const [currentTitle, setTitle] = useState('');\r\n  const [file, setFile] = useState(null);\r\n\r\n  //read the file and decode it\r\n  const getFile = (e) => {\r\n    console.log(e);\r\n    if (e.target && e.target.files[0].size > 3000000) {\r\n      console.error(`can't upload files larger then 3 MB`);\r\n      setFile(null);\r\n      return;\r\n    }\r\n    let reader = new FileReader();\r\n    const file = e.target.files[0];\r\n    const name = file.name;\r\n    setTitle(name);\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    reader.onload = (e) => {\r\n      // setTitle(reader.name);\r\n      setFile(reader.result);\r\n    };\r\n  };\r\n  //submit\r\n  const restoreInitialState = () => {\r\n    setLabel('');\r\n    setFile(null);\r\n  };\r\n  const getImageInfo = async (e) => {\r\n    e.preventDefault();\r\n    if (currentLabel !== null && file !== null) {\r\n      switch (props.type) {\r\n        case 'familyMembers': {\r\n          await props.addNewFamilyMember(currentLabel, file);\r\n          restoreInitialState();\r\n          break;\r\n        }\r\n        case 'images': {\r\n          await props.addNewImageToAlbums(currentTitle, file);\r\n          restoreInitialState();\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='uploader'>\r\n      <form className='form' onSubmit={getImageInfo}>\r\n        {/* <label>\r\n          image title:\r\n          <input\r\n            type='text'\r\n            disabled={props.type === 'familyMembers' ? true : false}\r\n            value={currentTitle}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </label> */}\r\n        <label>\r\n          {props.type}:\r\n          <input\r\n            type='text'\r\n            disabled={props.type === 'familyMembers' ? false : true}\r\n            value={currentLabel}\r\n            onChange={(e) => setLabel(e.target.value)}\r\n          />\r\n        </label>\r\n        <input type='file' onChange={getFile} />\r\n        <button>upload image</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default UploaderForm;\r\n","import \"../style/familyMemberCard.css\";\r\nimport { useContext } from \"react\";\r\nimport { FamilyContext } from \"../context/family/FamilyContext\";\r\nimport { Link } from \"react-router-dom\";\r\nconst FamilyMemberCard = ({ src, label }) => {\r\n  const { deleteFamilyMember } = useContext(FamilyContext);\r\n\r\n  const contextMenuDelete = (event) => {\r\n    event.preventDefault();\r\n    deleteFamilyMember(label);\r\n  };\r\n\r\n  return (\r\n    src && (\r\n      <div\r\n        key={label}\r\n        className=\"familyMemberCard\"\r\n        onContextMenu={contextMenuDelete}\r\n      >\r\n        <h1>{label}</h1>\r\n        <img key={label} src={src} alt={label} />\r\n        <Link to={`/albums/${label}`} style={{ textDecoration: \"none\" }}>\r\n          ALBUM\r\n        </Link>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default FamilyMemberCard;\r\n//all we need is the label!so cool :)\r\n","import \"../style/dropZone.css\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst DropZone = (props) => {\r\n  const onDrop = useCallback(\r\n    async (acceptedFiles) => {\r\n      acceptedFiles.forEach(async (file) => {\r\n        // if (file.size > 4000000)\r\n        //   console.error(\"can't take files larger then 4mb\");\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = async () => {\r\n          const title = file.name;\r\n          const src = reader.result;\r\n          await props.addNewImageToAlbums(title, src);\r\n        };\r\n      });\r\n    },\r\n    [props]\r\n  );\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/*\",\r\n  });\r\n  return (\r\n    <div className=\"dropZone\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      <p>\r\n        Drag 'n' drop some files here, or click to select one or multiple files\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default DropZone;\r\n","import \"../style/manageFamily.css\";\r\nimport { useCallback, useContext, useEffect } from \"react\";\r\nimport UploaderForm from \"../components/UploaderForm\";\r\nimport FamilyMemberCard from \"../components/familyMemberCard\";\r\nimport { FaceapiContext } from \"../context/faceapi/FaceapiContext\";\r\nimport { FamilyContext } from \"../context/family/FamilyContext\";\r\nimport DropZone from \"../components/DropZone\";\r\n\r\nconst ManageFamily = () => {\r\n  const {\r\n    loadModules,\r\n    modulesLoaded,\r\n    addFamilyMemberFaceapi,\r\n    addNewImageFaceapi,\r\n  } = useContext(FaceapiContext);\r\n  const { getAllFamilyMembers, familyMembers } = useContext(FamilyContext);\r\n\r\n  //using callback to memoize the function so it won't be referenced differently every render.\r\n  const getAllFamilyMembersCallback = useCallback(async () => {\r\n    if (!modulesLoaded) {\r\n      await loadModules();\r\n    }\r\n    await getAllFamilyMembers();\r\n  }, [loadModules, getAllFamilyMembers, modulesLoaded]);\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      try {\r\n        await getAllFamilyMembersCallback();\r\n      } catch (error) {\r\n        console.log(\"error in use effect get all familyNames\");\r\n      }\r\n    };\r\n    load();\r\n  }, [getAllFamilyMembersCallback]);\r\n\r\n  const addNewFamilyMember = async (label, src) => {\r\n    return await addFamilyMemberFaceapi(label, src);\r\n  };\r\n  const addNewImageToAlbums = async (title, src) => {\r\n    return await addNewImageFaceapi(title, src);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <div className=\"inputs\">\r\n        <UploaderForm\r\n          type=\"familyMembers\"\r\n          button\r\n          addNewFamilyMember={addNewFamilyMember}\r\n        />\r\n        <UploaderForm type=\"images\" addNewImageToAlbums={addNewImageToAlbums} />\r\n      </div>\r\n      <div className=\"containerLeftRightFlex\">\r\n        <div className=\"leftSide\">\r\n          <h1>welcome to your album sorter!</h1>\r\n          <p>\r\n            add family members with the uploader, and <br />\r\n            right click to delete, and then just add random\r\n            <br /> pictures and look them up in the right album\r\n          </p>\r\n          <div key=\"familyCards\" className=\"familyCards\">\r\n            {familyMembers &&\r\n              familyMembers.map((member) => {\r\n                return (\r\n                  <FamilyMemberCard\r\n                    key={member.label}\r\n                    src={member.src}\r\n                    label={member.label}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightSide\">\r\n          <DropZone addNewImageToAlbums={addNewImageToAlbums} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ManageFamily;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/manageFamily\" className=\"HomeLink\">\r\n        Home\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ImageProvider from \"./context/images/ImagesProvider\";\nimport FamilyProvider from \"./context/family/FamilyProvider\";\nimport FaceapiProvider from \"./context/faceapi/FaceapiProvider\";\nimport AlbumCrud from \"./pages/AlbumCrud\";\nimport Loader from \"./pages/Loader\";\nimport ManageFamily from \"./pages/ManageFamily\";\nimport Header from \"./pages/Header\";\nfunction App() {\n  return (\n    <FamilyProvider>\n      <ImageProvider>\n        <FaceapiProvider>\n          <BrowserRouter>\n            <Route path=\"/\">\n              <Header />\n            </Route>\n            <Route exact path=\"/\">\n              <Loader />\n            </Route>\n            <Route exact path=\"/manageFamily\">\n              <ManageFamily />\n            </Route>\n            <Route exact path=\"/albums/:label\">\n              <AlbumCrud />\n            </Route>\n          </BrowserRouter>\n        </FaceapiProvider>\n      </ImageProvider>\n    </FamilyProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}